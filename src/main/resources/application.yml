# 配置server
server:
  port: 8080
  servlet:
    context-path: /

# 配置连接池
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      url: jdbc:mysql://localhost:3306/sm_db
      username: root
      password: 1234
      driver-class-name: com.mysql.cj.jdbc.Driver

# 配置mybatis-plus
mybatis-plus:
  global-config:
    db-config:
      # mybatis-plus的主键策略，即自增，需要在定义数据库的列时显示指定auto_increment，默认值是雪花算法
      id-type: auto
      # 指定实体类中逻辑删除的字段名
      logic-delete-field: isDeleted
      # 指定逻辑删除的字段值为1时，表示逻辑删除了
      logic-delete-value: 1
      # 指定逻辑删除的字段值为0时，表示没有逻辑删除了
      logic-not-delete-value: 0
      # 指定表名的前缀，这样就不用在每个实体类上使用注解 @TableName("news_type")来指定对应的表名了
      table-prefix: news_
  configuration:
    # 配置mybatis-plus日志输出，这样可以显示sql语句
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 开启驼峰命名的映射，默认值是true
    map-underscore-to-camel-case: true
  # 指定xml文件的位置，默认值是 classpath*:/mapper/**/*.xml
  mapper-locations: classpath*:/mapper/**/*.xml

# 配置jwt，自定义的
jwt:
  token:
    # 有效时间，单位为分钟
    tokenExpiration: 1200000
    # 当前程序签约密钥
    tokenSignKey: headline2025

# springdoc-openapi项目配置
springdoc:
  swagger-ui:
    # 配置swagger-ui.html的访问路径
    path: /swagger-ui.html
    # 接口文档中的tags排序规则，默认是alpha，即按照字母顺序排序
    #                       也可以设置为as-is，即按照在代码中定义的顺序排序
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    # 配置api-docs的反问路径，默认/v3/api-docs
    path: /v3/api-docs
  # 配置分组信息
  group-configs:
    # 分组名称
    - group: '用户管理'
      # 配置要匹配的路径，注意必须写出/xxx/**
      paths-to-match: '/user/**'
      # controller的完全路径
      packages-to-scan: com.otto.controller
    - group: '首页管理'
      paths-to-match: '/portal/**'
      packages-to-scan: com.otto.controller
# knife4j的增强配置，不需要增强可以不配
knife4j:
  # 设置true以启用Knif34j的增强功能，即启用Knife4j的UI
  enable: true
  setting:
    # 设置语言是zh_cn，也可设置为en
    language: zh_cn
  # 是否开启生产环境屏蔽，这里设置为不要屏蔽
  production: false
  basic:
    # 是否启用登陆认证，这里设置为需要
    enable: true
    username: otto
    password: 1234